/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2017-09-07 18:17:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class alert_005fissue_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Issue/Return Portal</title>\r\n");
if(request.getAttribute("type").toString().contains("-")) {
      out.write("\r\n");
      out.write("<link rel=\"icon\" href=\"images/error.png\" />\r\n");
}else{
	
      out.write("\r\n");
      out.write("\t<link rel=\"icon\" href=\"images/issue.png\" />\r\n");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function greenShift(){\r\n");
      out.write("\tdocument.getElementById('alert').style.background='#41f447';\r\n");
      out.write("\tdocument.getElementById('alert').style.color='#333333';\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write(".alert {\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    background-color: #f44336; /* Red */\r\n");
      out.write("    color: white;\r\n");
      out.write("    margin-bottom: 15px;\r\n");
      out.write("    width:30%;\r\n");
      out.write("    margin-left:34%;\r\n");
      out.write("    height:25%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* The close button */\r\n");
      out.write(".closebtn {\r\n");
      out.write("    margin-left: 15px;\r\n");
      out.write("    color: white;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    float: right;\r\n");
      out.write("    font-size: 22px;\r\n");
      out.write("    line-height: 20px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* When moving the mouse over the close button */\r\n");
      out.write(".closebtn:hover {\r\n");
      out.write("    color: black;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "cl_access.jsp", out, false);
      out.write("\r\n");
      out.write("<p></p>\r\n");
      out.write("<div class=\"alert\" id=\"alert\">\r\n");
      out.write("  <span class=\"closebtn\" onclick=\"this.parentElement.style.display='none';\">&times;</span> \r\n");
      out.write("  ");
 if(request.getAttribute("type").toString().equals("-0")){
      out.write("\r\n");
      out.write("  <h3>Some Error Occurred! Please Try Again</h3>\r\n");
      out.write("  <p>");
      out.print(request.getAttribute("I_ERROR").toString() );
      out.write("\r\n");
      out.write("  ");
} 
      out.write("\r\n");
      out.write("  ");
if(request.getAttribute("type").toString().equals("0")){ 
      out.write("\r\n");
      out.write("  <h3>Book Issued</h3>\r\n");
      out.write("  <p>");
      out.print(request.getAttribute("R_DATE").toString() );
      out.write("</p>\r\n");
      out.write("  <script>\r\n");
      out.write("  greenShift();\r\n");
      out.write("  </script>\r\n");
      out.write("  ");
} 
      out.write("\r\n");
      out.write("  ");
if(request.getAttribute("type").toString().equals("1")){ 
      out.write("\r\n");
      out.write("  <h3>Book Returned</h3>\r\n");
      out.write("  <h5>Collect Fine Amount: ");
      out.print(request.getAttribute("FINE").toString() );
      out.write("</h5>\r\n");
      out.write("  <script>greenShift()</script>\r\n");
      out.write("  ");
} 
      out.write("\r\n");
      out.write("  ");
if(request.getAttribute("type").toString().equals("-1")){
      out.write("\r\n");
      out.write("  <h3>Some Error Occurred!Please Try Again</h3>\r\n");
      out.write("  <p>This Book is Not available for return&nbsp;<span style=\"font-size:12px;\">   (or Invalid Book ID)</span></p>\r\n");
      out.write(" \t");
} 
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" ");
if(request.getAttribute("type").toString().equals("2")){
	 
      out.write("\r\n");
      out.write("\t <h3>Book Renewed</h3>\r\n");
      out.write("\t <h4>Collect Fine: ");
      out.print(request.getAttribute("FINE").toString() );
      out.write("</h4>\r\n");
      out.write("\t <p>");
      out.print(request.getAttribute("R_DATE"));
      out.write("\r\n");
      out.write("\t <script >greenShift()</script>\r\n");
      out.write("\t ");
}
 if(request.getAttribute("type").toString().equals("-2")){
      out.write("\r\n");
      out.write("\t\t <h3>Some Error Occurred! Please Try Again</h3>\r\n");
      out.write("\t\t <p>This Book is Not available for renewal&nbsp;<span style=\"font-size:12px;\">   (or Invalid Book ID)</span></p>\r\n");
      out.write("\t");
 }
      out.write(" \r\n");
      out.write("\t \r\n");
      out.write(" \r\n");
      out.write("  \r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
